#!/bin/bash

# AWS Worker Bootstrap File
# File used to configure worker nodes on AWS

# Unlock the user account
sudo passwd -u ubuntu

# Change Host File Entries
ENTRY="SERVER_IP SERVER_HOSTNAME SERVER_ALIAS"
FILE=/etc/hosts
if grep -q "$ENTRY" $FILE; then
  echo "entry already exists"
else
  sh -c "echo $ENTRY >> /etc/hosts"
fi

# copy all the setup scripts to the appropriate home directory
cp /data/launch-instance/setup* /home/ubuntu/
chmod 775 /home/ubuntu/setup*
chown ubuntu:ubuntu /home/ubuntu/setup*

## Worker Data Configuration -- On Vagrant this is a separate file

# Force the generation of various directories that are in the EBS mnt
rm -rf /mnt/openstudio
mkdir -p /mnt/openstudio
chown -R ubuntu:www-data /mnt/openstudio
chmod -R 775 /mnt/openstudio

# save application files into the right directory
cp -rf /data/worker-nodes/* /mnt/openstudio/

# install workflow dependencies
rm -f /mnt/openstudio/Gemfile.lock
su - ubuntu -c 'cd /mnt/openstudio && bundle'
# also install as root for now. Give full path to bundle because sudoers path is
# not available with cloud-init root
cd /mnt/openstudio && /opt/rbenv/shims/bundle

# copy over the models needed for mongo
cd /mnt/openstudio/rails-models && unzip -o rails-models.zip -d models

# rerun the permissions after unzipping the files
chown -R ubuntu:www-data /mnt/openstudio
find /mnt/openstudio -type d -print0 | xargs -0 chmod 775
find /mnt/openstudio -type f -print0 | xargs -0 chmod 664

## End Worker Data Configuration

#turn off hyperthreading
# NL: do not turn off hyperthreading, rather, just limit the number of cores and see if it
# makes a difference.
#for cpunum in $(
#  cat /sys/devices/system/cpu/cpu*/topology/thread_siblings_list |
#  cut -s -d, -f2- | tr ',' '\n' | sort -un); do
#    echo 0 > /sys/devices/system/cpu/cpu$cpunum/online
#done

#file flag the user_data has completed
cat /dev/null > /home/ubuntu/user_data_done
