#!/bin/sh
# NOTE: This file is now the main script to configure AWS workers

# AWS Worker Bootstrap File
# File used to configure worker nodes on AWS

# Change Host File Entries
ENTRY="SERVER_IP SERVER_HOSTNAME SERVER_ALIAS"
FILE=/etc/hosts
if grep -q "$ENTRY" $FILE; then
  echo "entry already exists"
else
  sudo sh -c "echo $ENTRY >> /etc/hosts"
fi

# copy all the setup scripts to the appropriate home directory
cp /data/launch-instance/setup* /home/ubuntu/
chmod 775 /home/ubuntu/setup*
chown ubuntu:ubuntu /home/ubuntu/setup*

## Worker Data Configuration -- On Vagrant this is a separate file

# Force the generation of various directories that are in the EBS mnt
sudo rm -rf /mnt/openstudio
sudo mkdir -p /mnt/openstudio
sudo chown -R ubuntu:www-data /mnt/openstudio
sudo chmod -R 775 /mnt/openstudio

# save application files into the right directory
sudo cp -rf /data/worker-nodes/* /mnt/openstudio/

 # install workflow dependencies
 cd /mnt/openstudio
 sudo rm -f Gemfile.lock
 bundle update
 sudo bundle update

 # copy over the models needed for mongo
 cd /mnt/openstudio/rails-models && sudo unzip -o rails-models.zip -d models

 # rerun the permissions after unzipping the files
 sudo chown -R ubuntu:www-data /mnt/openstudio
 sudo find /mnt/openstudio -type d -print0 | xargs -0 chmod 775
 sudo find /mnt/openstudio -type f -print0 | xargs -0 chmod 664

 ## End Worker Data Configuration

#turn off hyperthreading
for cpunum in $(
  cat /sys/devices/system/cpu/cpu*/topology/thread_siblings_list | 
  cut -s -d, -f2- | tr ',' '\n' | sort -un); do
    echo 0 > /sys/devices/system/cpu/cpu$cpunum/online
done

#file flag the user_data has completed
cat /dev/null > /home/ubuntu/user_data_done
